<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0" metadata-complete="true">
	
	<display-name>Contacts React</display-name>
					
	<!-- Make sure that the database is properly deployed when the app is launched -->
	<context-param>
    	<param-name>dwo-auto-deploy-jsonstore</param-name>
    	<param-value>${contacts.auto-deploy-jsonstore=true}</param-value>
    </context-param>


<!--
	Define these properties to enable the replication triggered by this application.  
	<context-param>
    	<param-name>dwo-sync-enabled</param-name>
    	<param-value>${contacts.sync-enabled=false}</param-value>
  	</context-param>
	<context-param>
    	<param-name>dwo-sync-emptyjsondbonstart</param-name>
    	<param-value>${contacts.sync-emptyjsondbonstart=false}</param-value>
  	</context-param>
	<context-param>
    	<param-name>dwo-sync-url</param-name>
    	<param-value>${contacts.sync-url=http://127.0.0.1/darwino.sync}</param-value>
    </context-param>
	<context-param>
    	<param-name>dwo-sync-commit-threshold</param-name>
    	<param-value>${contacts.sync-commit-threshold=100}</param-value>
  	</context-param>
	<context-param>
    	<param-name>dwo-sync-instances</param-name>
    	<param-value>${contacts.sync-instances}</param-value>
    </context-param>
	<context-param>
    	<param-name>dwo-sync-user</param-name>
    	<param-value>${contacts.sync-user}</param-value>
  	</context-param>
	<context-param>
    	<param-name>dwo-sync-password</param-name>
    	<param-value>${contacts.sync-password}</param-value>
  	</context-param>
	<context-param>
    	<param-name>dwo-sync-mode</param-name>
    	<param-value>${contacts.sync-mode=pull+push}</param-value>
  	</context-param>
	<context-param>
    	<param-name>dwo-sync-period</param-name>
    	<param-value>${contacts.sync-period}</param-value>
    </context-param>
	<context-param>
    	<param-name>dwo-sync-retry-delay</param-name>
    	<param-value>${contacts.sync-retry-delay}</param-value>
    </context-param>
		<context-param>
    	<param-name>dwo-sync-initial-delay</param-name>
    	<param-value>${contacts.sync-initial-delay}</param-value>
    </context-param>
	<context-param>
    	<param-name>dwo-sync-trace</param-name>
    	<param-value>${contacts.sync-trace=false}</param-value>
  	</context-param>
-->	
	
	<!-- Application initialization -->
	<listener>
	    <listener-class>
			com.contacts.app.AppContextListener        
	    </listener-class>
	</listener>

	<!--  Log filter  -->
	<!-- This must be the absolute first filter, as it creates the logging context used to debug any error -->
	<filter>
    	<filter-name>LogServletFilter</filter-name>
    	<filter-class>com.darwino.j2ee.servlet.logging.LogServletFilter</filter-class>
        <init-param>
      		<param-name>forcelog-param</param-name>
      		<param-value>forcelog</param-value>
    	</init-param>    
	</filter>
	<filter-mapping>
    	<filter-name>LogServletFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>
		
	<!--  Filter for Gzip -->
	<!--  Note that a GZIP filter should not be applied twice in case of FORWARD -->
	<!--  This filter should then be added first -->
	<filter>
    	<filter-name>GZipFilter</filter-name>
    	<filter-class>com.darwino.j2ee.servlet.gzip.GZipServletFilter</filter-class>
	</filter>
	<filter-mapping>
    	<filter-name>GZipFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>

	<!-- Filter for $darwino-xxx URLs rewritting -->
	<!--  This filter must be before the services or resources filters, to make sure that the URL is processed before reaching them -->
	<filter>
    	<filter-name>DarwinoRewriting</filter-name>
    	<filter-class>com.darwino.j2ee.servlet.resources.DarwinoGlobalPathRewriterFilter</filter-class>
   	</filter>
	<filter-mapping>
    	<filter-name>DarwinoRewriting</filter-name>
    	<url-pattern>/*</url-pattern>
	</filter-mapping>
			
	<!--  CORS filter for the JsonStore -->
	<!-- CORS should be applied before the authentication else the OPTIONS preflight can be blocked -->
	<filter>
    	<filter-name>Cors</filter-name>
    	<filter-class>com.darwino.j2ee.servlet.cors.CORSFilter</filter-class>
        <init-param>
      		<param-name>cors.allowed.methods</param-name>
      		<param-value>GET,POST,PUT,DELETE,HEAD,OPTIONS</param-value>
    	</init-param>    
	</filter>
	<filter-mapping>
    	<filter-name>Cors</filter-name>
    	<url-pattern>/*</url-pattern>
    	<dispatcher>REQUEST</dispatcher>
    	<dispatcher>FORWARD</dispatcher>
    </filter-mapping>
			
	<!--  Filter for handling requests coming from a proxy -->
<!-- 	
	<filter>
    	<filter-name>ProxyFilter</filter-name>
    	<filter-class>com.darwino.j2ee.servlet.proxy.ProxyServletFilter</filter-class>
	</filter>
	<filter-mapping>
    	<filter-name>ProxyFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>
 -->	
	
	<!--  Filter for custom authentication -->
	<!--  This should be the first one, before the J2EE filter as the user is required for the session  -->
	<!--  Note that the server level authentication should be disabled then  -->
	<filter>
    	<filter-name>DarwinoAuthentication</filter-name>
   		<filter-class>com.darwino.j2ee.servlet.authentication.AuthenticationFilter</filter-class>
        <init-param>
      		<param-name>login-form</param-name>
      		<param-value>contacts-login.html</param-value>
    	</init-param>    
    </filter>
	<filter-mapping>
    	<filter-name>DarwinoAuthentication</filter-name>
    	<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
    	<dispatcher>FORWARD</dispatcher>
   	</filter-mapping>

	<!--  Filter for creating the Darwino Application, Context and DB session -->
	<filter>
    	<filter-name>DarwinoApplication</filter-name>
    	<filter-class>com.darwino.j2ee.application.DarwinoJ2EEFilter</filter-class>
	</filter>
	<filter-mapping>
    	<filter-name>DarwinoApplication</filter-name>
    	<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
    	<dispatcher>FORWARD</dispatcher>
    </filter-mapping>
	
	
	<!--  Filter for publishing the Darwino Services -->
	<filter>
    	<filter-name>DarwinoServices</filter-name>
    	<filter-class>com.contacts.app.AppServiceDispatcher</filter-class>
	</filter>
	<filter-mapping>
    	<filter-name>DarwinoServices</filter-name>
    	<url-pattern>/*</url-pattern>
    	<!-- DarwinoRewriting can trigger a forward  -->
    	<dispatcher>REQUEST</dispatcher>
    	<dispatcher>FORWARD</dispatcher>
   	</filter-mapping>
				
	<!--  Mapping for web resources -->
	<!--  Mapping to /* prevents the <welcome-file-list> to be honored. To work it around, the servlet -->
	<!--  has an optional welcome-file parameter. -->
	<!--  The other solution is to map a subpath, like /mobile/* -->
	<servlet>
		<display-name>Default Files Servlet</display-name>
		<servlet-name>FilesServlet</servlet-name>
		<servlet-class>com.darwino.j2ee.servlet.resources.DarwinoAppResourcesServlet</servlet-class>
		<!-- The welcome page should me managed by the service as it intercept /* -->
		<init-param>
			<param-name>welcome-file</param-name>
			<param-value>/index.html</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>FilesServlet</servlet-name>
		<url-pattern>/*</url-pattern>
		<!-- <url-pattern>/mobile/*</url-pattern> -->
	</servlet-mapping>
		
		
	<!-- Welcome pages -->
	<!-- Done at the resource service level
  	<welcome-file-list>
    	<welcome-file>index.html</welcome-file>
  	</welcome-file-list>
 	-->
 	
 	
	<!-- Enable this to use the J2EE CONTAINER security -->
	<!-- 
		At least the following resource must be protected for mobile access
		This is used by the device to access the current user information based on the authenticated principal.
		Not having this resource protected would result to an anonymous user returned to the mobile.
		Note that the security layer can also be provided by a custon filter instead of the web application server. 
	 -->
<!-- 	
	<security-role>
		<role-name>user</role-name>
	</security-role>
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>ApplicationRoot</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<web-resource-collection>
			<web-resource-name>MobileService</web-resource-name>
			<url-pattern>/.darwino-mobile/*</url-pattern>
		</web-resource-collection>
 		<auth-constraint>
			<role-name>user</role-name>
		</auth-constraint>
	</security-constraint>

	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>contacts</realm-name>
	</login-config>
 -->
   	  	
</web-app>
